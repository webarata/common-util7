apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'findbugs'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
}

group = 'link.webarata3.common'
version = '0.2.4'

jar {
    baseName = 'common-util7'
}

/* Source作成用のタスク */
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// http://vcs.hatenablog.com/entry/java/cross-compile-bootclasspath
tasks.withType(JavaCompile) {
    doFirst {
        if (sourceCompatibility == '1.7' && System.env.JDK7_HOME != null) {
            options.fork = true
            options.bootClasspath = "$System.env.JDK7_HOME/jre/lib/rt.jar"
            options.bootClasspath += "$File.pathSeparator$System.env.JDK7_HOME/jre/lib/jsse.jar"
        }
    }
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

uploadArchives {
    repositories {
        mavenDeployer {
           repository(url: uri(getProperty('mavenRepository')))
        }
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task findbugsConvertUtf8 << {
    def filename="${project.rootDir}/build/reports/findbugs/main.html"
    def file = new File(filename)
    def text = file.getText()
    text = text.replaceAll(/<head>/, "<head>\n<meta http-equiv='Content-Type' content='text/html; charset=UTF-8'>")

    def fw=new File(filename).newWriter()
    fw.writeLine(text)
    fw.close()
}

apply plugin: 'jacoco'
 
jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = true
    }
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
    }
}

apply plugin: 'com.github.kt3k.coveralls'
